// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Segurplan.Core.Database;

namespace Segurplan.Migrations.SqlServer.Migrations
{
    [DbContext(typeof(SegurplanContext))]
    [Migration("20201015155810_isAvailabeBlueprint")]
    partial class isAvailabeBlueprint
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<int>("UserId");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<int>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Activity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .IsRequired()
                        .IsUnicode(false);

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("Number");

                    b.Property<int>("SubChapterId");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("WordDescription");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("SubChapterId");

                    b.ToTable("Activity");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.ActivityVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovementDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AssociatedDetails");

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description")
                        .IsUnicode(false);

                    b.Property<int>("IdActivity");

                    b.Property<int?>("IdApprover");

                    b.Property<int?>("IdReviewer");

                    b.Property<int>("IdSubChapterVersion");

                    b.Property<string>("MachineTool");

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("Number");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RiskEvaluation");

                    b.Property<string>("SupportFacilities");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("WordDescription");

                    b.Property<string>("WorkDetails");

                    b.Property<string>("WorkOrganization");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdActivity");

                    b.HasIndex("IdApprover");

                    b.HasIndex("IdReviewer");

                    b.HasIndex("IdSubChapterVersion");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("ActivityVersion");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.AffiliatedCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("AffiliatedCompany");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.BusinessAddress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("BusinessAddress");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Chapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<bool>("DefaultSelectedChapter");

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("Number");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("WordDescription");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Chapter");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.ChapterVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovementDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AssociatedDetails");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<DateTime?>("EndDate");

                    b.Property<int?>("IdApprover");

                    b.Property<int>("IdChapter");

                    b.Property<int?>("IdReviewer");

                    b.Property<string>("MachineTool");

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("Number");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RiskEvaluation");

                    b.Property<DateTime>("StartDate");

                    b.Property<string>("SupportFacilities");

                    b.Property<string>("Title");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("VersionNumber");

                    b.Property<string>("WordDescription");

                    b.Property<string>("WorkDetails");

                    b.Property<string>("WorkOrganization");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdApprover");

                    b.HasIndex("IdChapter");

                    b.HasIndex("IdReviewer");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("ChapterVersion");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.DefaultSafetyStudyPlanFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("FileData");

                    b.Property<string>("FileName");

                    b.Property<decimal>("FileSize");

                    b.Property<int>("IdPlanFileType");

                    b.HasKey("Id");

                    b.ToTable("DefaultSafetyStudyPlanFile");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Delegation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BusinessAddressId");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("BusinessAddressId");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Delegation");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.EmergencyPlanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Caption");

                    b.HasKey("Id");

                    b.ToTable("EmergencyPlanType");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.GeneralActivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("GeneralActivity");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanActivityVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AvailableActivitiId");

                    b.Property<string>("ChapterDescription");

                    b.Property<int>("ChapterPosition");

                    b.Property<int>("IdActivityVersion");

                    b.Property<int>("IdPlan");

                    b.Property<int>("Position");

                    b.Property<string>("SubChapterDescription");

                    b.Property<int>("SubChapterPosition");

                    b.Property<string>("WordDescription");

                    b.HasKey("Id");

                    b.HasIndex("IdActivityVersion");

                    b.HasIndex("IdPlan");

                    b.ToTable("PlanActivityVersion");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Plane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<byte[]>("Data");

                    b.Property<int>("FamilyId");

                    b.Property<string>("FileName");

                    b.Property<bool>("IsAvailable")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Name");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("FamilyId");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Plane");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlaneFamily", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Family");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("PlaneFamily");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanFileType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("PlanFileType");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanReview", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comments")
                        .IsUnicode(false);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("IdPlan");

                    b.Property<int>("IdReviser");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdPlan");

                    b.HasIndex("IdReviser");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("PlanReview");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("PlanType");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PreventiveMeasure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("PreventiveMeasure");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Probability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Probability");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Profile");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Risk", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Code");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Risk");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.RiskAndPreventiveMeasuresMeasures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PreventiveMeasureId");

                    b.Property<int>("RisksAndPreventiveMeasuresId");

                    b.HasKey("Id");

                    b.HasIndex("PreventiveMeasureId");

                    b.HasIndex("RisksAndPreventiveMeasuresId");

                    b.ToTable("RiskAndPreventiveMeasuresMeasures");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.RiskLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Level");

                    b.Property<int>("LevelValue");

                    b.Property<string>("TrafficLightsColour");

                    b.HasKey("Id");

                    b.ToTable("RiskLevel");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.RisksAndPreventiveMeasures", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ActivityId");

                    b.Property<int>("ChapterId");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("ProbabilityId");

                    b.Property<int>("RiskId");

                    b.Property<int>("RiskLevelId");

                    b.Property<int>("RiskOrder");

                    b.Property<int>("SeriousnessId");

                    b.Property<int>("SubChapterId");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("ActivityId");

                    b.HasIndex("ChapterId");

                    b.HasIndex("ProbabilityId");

                    b.HasIndex("RiskId");

                    b.HasIndex("RiskLevelId");

                    b.HasIndex("SeriousnessId");

                    b.HasIndex("SubChapterId");

                    b.ToTable("RisksAndPreventiveMeasures");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ApproverName");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("CreatorName");

                    b.Property<int>("IdAffiliatedCompany");

                    b.Property<int>("IdBusinessAddress");

                    b.Property<int>("IdCreatorProfile");

                    b.Property<int>("IdCustomer");

                    b.Property<int>("IdDelegation");

                    b.Property<int>("IdGeneralActivity");

                    b.Property<int>("IdPlanType");

                    b.Property<int>("IdReviewer");

                    b.Property<int>("IdTemplate");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("PlanCustomerDescription")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ProjectName")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdAffiliatedCompany");

                    b.HasIndex("IdBusinessAddress");

                    b.HasIndex("IdCreatorProfile");

                    b.HasIndex("IdCustomer");

                    b.HasIndex("IdDelegation");

                    b.HasIndex("IdGeneralActivity");

                    b.HasIndex("IdPlanType");

                    b.HasIndex("IdReviewer");

                    b.HasIndex("IdTemplate");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("UserId");

                    b.ToTable("SafetyStudyPlan");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActivityDescription");

                    b.Property<bool>("AffectedServices");

                    b.Property<string>("AffectedServicesDescription");

                    b.Property<string>("AssistanceCenters");

                    b.Property<string>("CompanyName");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("EmergencyPlanDescription");

                    b.Property<double>("ExecutionBudget");

                    b.Property<string>("ExecutionTime");

                    b.Property<int>("ExecutionTimeDays");

                    b.Property<int>("ExecutionTimeMonths");

                    b.Property<int>("IdEmergencyPlanType");

                    b.Property<int>("IdPlan");

                    b.Property<string>("Localization");

                    b.Property<int>("MaximumWorkers");

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Municipality");

                    b.Property<string>("OrganizationalStructure");

                    b.Property<double>("PSSBudget");

                    b.Property<string>("Promoter");

                    b.Property<string>("SecurityBudget");

                    b.Property<string>("SituationDescription");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<double>("WorkerAverage");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdEmergencyPlanType");

                    b.HasIndex("IdPlan");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("SafetyStudyPlanDetails");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<byte[]>("FileData")
                        .IsRequired()
                        .HasColumnName("File_data");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<decimal>("FileSize")
                        .HasColumnType("decimal(18,4)");

                    b.Property<int>("IdPlanFileType");

                    b.Property<int>("IdSafetyStudyPlan");

                    b.Property<int>("ModifiedBy");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdPlanFileType");

                    b.HasIndex("IdSafetyStudyPlan");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("SafetyStudyPlanFile");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanPlane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ContainsFile");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<string>("FamilyName");

                    b.Property<int?>("IdPlane");

                    b.Property<int>("IdSafetyStudyPlan");

                    b.Property<bool>("IsAvailable");

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("Position");

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdPlane");

                    b.HasIndex("IdSafetyStudyPlan");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("SafetyStudyPlanPlane");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanPlaneFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Data");

                    b.Property<Guid>("Data_Id")
                        .HasColumnType("UNIQUEIDENTIFIER ROWGUIDCOL UNIQUE");

                    b.Property<string>("FileName");

                    b.Property<string>("Name");

                    b.Property<int?>("Record_Id");

                    b.Property<int>("SafetyStudyPlanPlaneId");

                    b.HasKey("Id");

                    b.HasIndex("Record_Id")
                        .IsUnique()
                        .HasFilter("[Record_Id] IS NOT NULL");

                    b.HasIndex("SafetyStudyPlanPlaneId");

                    b.ToTable("SafetyStudyPlanPlaneFile");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Seriousness", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("Seriousness");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SubChapter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<int>("IdChapter");

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("Number");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdChapter");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("SubChapter");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SubChapterVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("ApprovementDate")
                        .HasColumnType("datetime");

                    b.Property<string>("AssociatedDetails");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("Description");

                    b.Property<int?>("IdApprover");

                    b.Property<int>("IdChapterVersion");

                    b.Property<int?>("IdReviewer");

                    b.Property<int>("IdSubChapter");

                    b.Property<string>("MachineTool");

                    b.Property<int>("ModifiedBy");

                    b.Property<int>("Number");

                    b.Property<DateTime?>("ReviewDate")
                        .HasColumnType("datetime");

                    b.Property<string>("RiskEvaluation");

                    b.Property<string>("SupportFacilities");

                    b.Property<string>("Title")
                        .IsRequired();

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("WorkDetails");

                    b.Property<string>("WorkOrganization");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("IdApprover");

                    b.HasIndex("IdChapterVersion");

                    b.HasIndex("IdReviewer");

                    b.HasIndex("IdSubChapter");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("SubChapterVersion");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("CreatedBy");

                    b.Property<string>("FilePath")
                        .IsUnicode(false);

                    b.Property<int>("ModifiedBy");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("Notes")
                        .IsUnicode(false);

                    b.Property<DateTime>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.ToTable("Template");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.UserChapterVersion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ChapterVersionId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ChapterVersionId");

                    b.HasIndex("UserId");

                    b.ToTable("UserChapterVersion");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.Identity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<DateTime>("CreateDate");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Activity", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("ActivityCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Activity_UsersCreate");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("ActivityModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Activity_UsersUpdate")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SubChapter", "SubChapter")
                        .WithMany("Activity")
                        .HasForeignKey("SubChapterId")
                        .HasConstraintName("FK_Activity_SubChapter");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.ActivityVersion", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("ActivityVersionCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_ActivityVersion_UsersCreate");

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Activity", "IdActivityNavigation")
                        .WithMany("ActivityVersion")
                        .HasForeignKey("IdActivity")
                        .HasConstraintName("FK_ActivityVersion_Activity");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "AprovedByNavigation")
                        .WithMany("ActivityVersionIdApproverNavigation")
                        .HasForeignKey("IdApprover")
                        .HasConstraintName("FK_ActivityVersion_UsersAprove");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "IdReviewerNavigation")
                        .WithMany("ActivityVersionIdReviewerNavigation")
                        .HasForeignKey("IdReviewer")
                        .HasConstraintName("FK_ActivityVersion_UsersReview");

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SubChapterVersion", "IdSubChapterVersionNavigation")
                        .WithMany("ActivityVersion")
                        .HasForeignKey("IdSubChapterVersion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("ActivityVersionModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_ActivityVersion_UsersUpdate")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.AffiliatedCompany", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("AffiliatedCompanyCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("AffiliatedCompanyModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.BusinessAddress", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("BusinessAddressCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_BusinessAddress_UsersCreate");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("BusinessAddressModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_BusinessAddress_UsersUpdate")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Chapter", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("ChapterCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("ChapterModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.ChapterVersion", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("ChapterVersionCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "AprovedByNavigation")
                        .WithMany("ChapterVersionIdApproverNavigation")
                        .HasForeignKey("IdApprover");

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Chapter", "IdChapterNavigation")
                        .WithMany("ChapterVersion")
                        .HasForeignKey("IdChapter")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "IdReviewerNavigation")
                        .WithMany("ChapterVersionIdReviewerNavigation")
                        .HasForeignKey("IdReviewer");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("ChapterVersionModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Customer", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("CustomerCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("CustomerModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Delegation", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.BusinessAddress", "BusinessAddress")
                        .WithMany("Delegations")
                        .HasForeignKey("BusinessAddressId");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("DelegationCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Delegation_UsersCreate");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("DelegationModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Delegation_UsersUpdate")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.GeneralActivity", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("GeneralActivityCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("GeneralActivityModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanActivityVersion", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.ActivityVersion", "IdActivityVersionNavigation")
                        .WithMany("PlanActivityVersion")
                        .HasForeignKey("IdActivityVersion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlan", "IdPlanNavigation")
                        .WithMany("PlanActivityVersion")
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Plane", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("PlaneCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlaneFamily", "PlaneFamilyIdNavigation")
                        .WithMany("Plane")
                        .HasForeignKey("FamilyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("PlaneModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlaneFamily", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("PlanFamilyCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("PlanFamilyModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanReview", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("PlanReviewCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_PlanReview_UsersCreate");

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlan", "IdPlanNavigation")
                        .WithMany("PlanReview")
                        .HasForeignKey("IdPlan")
                        .HasConstraintName("FK_PlanReview_SafetyStudyPlan");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "IdReviserNavigation")
                        .WithMany("PlanReviewIdReviserNavigation")
                        .HasForeignKey("IdReviser")
                        .HasConstraintName("FK_PlanReview_Users");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("PlanReviewModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_PlanReview_UsersUpdate")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanType", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("PlanTypeCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_PlanType_UsersCreate");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("PlanTypeModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_PlanType_UsersUpdate")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.PreventiveMeasure", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("PreventiveMeasureCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("PreventiveMeasureModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.RiskAndPreventiveMeasuresMeasures", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.PreventiveMeasure", "PreventiveMeasure")
                        .WithMany("RisksAndPreventiveMeasures")
                        .HasForeignKey("PreventiveMeasureId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.RisksAndPreventiveMeasures", "RisksAndPreventiveMeasures")
                        .WithMany("PreventiveMeasures")
                        .HasForeignKey("RisksAndPreventiveMeasuresId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.RisksAndPreventiveMeasures", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Activity", "Activity")
                        .WithMany()
                        .HasForeignKey("ActivityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Chapter", "Chapter")
                        .WithMany()
                        .HasForeignKey("ChapterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Probability", "Probability")
                        .WithMany()
                        .HasForeignKey("ProbabilityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Risk", "Risk")
                        .WithMany()
                        .HasForeignKey("RiskId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.RiskLevel", "RiskLevel")
                        .WithMany()
                        .HasForeignKey("RiskLevelId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Seriousness", "Seriousness")
                        .WithMany()
                        .HasForeignKey("SeriousnessId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SubChapter", "SubChapter")
                        .WithMany()
                        .HasForeignKey("SubChapterId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlan", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("SafetyStudyPlanCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_SafetyStudyPlan_UsersCreate");

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.AffiliatedCompany", "IdAffiliatedCompanyNavigation")
                        .WithMany("SafetyStudyPlan")
                        .HasForeignKey("IdAffiliatedCompany")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.BusinessAddress", "IdBusinessAddressNavigation")
                        .WithMany("SafetyStudyPlan")
                        .HasForeignKey("IdBusinessAddress")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Profile", "IdCreatorProfileNavigation")
                        .WithMany("SafetyStudyPlan")
                        .HasForeignKey("IdCreatorProfile")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Customer", "IdCustomerNavigation")
                        .WithMany("SafetyStudyPlan")
                        .HasForeignKey("IdCustomer")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Delegation", "IdDelegationNavigation")
                        .WithMany("SafetyStudyPlan")
                        .HasForeignKey("IdDelegation")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.GeneralActivity", "IdGeneralActivityNavigation")
                        .WithMany("SafetyStudyPlan")
                        .HasForeignKey("IdGeneralActivity")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanType", "IdPlanTypeNavigation")
                        .WithMany("SafetyStudyPlan")
                        .HasForeignKey("IdPlanType")
                        .HasConstraintName("FK_SafetyStudyPlan_PlanType");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "IdReviewerNavigation")
                        .WithMany("SafetyStudyPlanIdReviewerNavigation")
                        .HasForeignKey("IdReviewer")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Template", "IdTemplateNavigation")
                        .WithMany("SafetyStudyPlan")
                        .HasForeignKey("IdTemplate")
                        .HasConstraintName("FK_SafetyStudyPlan_Template");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("SafetyStudyPlanModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_SafetyStudyPlan_UsersUpdate")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User")
                        .WithMany("SafetyStudyPlanIdApproverNavigation")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanDetails", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("SafetyStudyPlanDetailsCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.EmergencyPlanType", "IdEmergencyPlanTypeNavigation")
                        .WithMany("SafetyStudyPlanDetails")
                        .HasForeignKey("IdEmergencyPlanType")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlan", "IdPlanNavigation")
                        .WithMany("SafetyStudyPlanDetails")
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("SafetyStudyPlanDetailsModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanFile", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("SafetyStudyPlanFileCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.PlanFileType", "IdPlanFileTypeNavigation")
                        .WithMany("SafetyStudyPlanFile")
                        .HasForeignKey("IdPlanFileType")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlan", "IdSafetyStudyPlanNavigation")
                        .WithMany("SafetyStudyPlanFile")
                        .HasForeignKey("IdSafetyStudyPlan")
                        .HasConstraintName("FK_SafetyStudyPlanFiles_SafetyStudyPlan")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("SafetyStudyPlanFileModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanPlane", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("SafetyStudyPlanPlaneCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Plane", "SafetyStudyPlanPlaneIdPlaneNavigation")
                        .WithMany("SafetyStudyPlanPlane")
                        .HasForeignKey("IdPlane");

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlan", "SafetyStudyPlanPlaneIPlanNavigation")
                        .WithMany("SafetyStudyPlanPlane")
                        .HasForeignKey("IdSafetyStudyPlan")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("SafetyStudyPlanPlaneModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanPlaneFile", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SafetyStudyPlanPlane", "SafetyStudyPlanPlane")
                        .WithMany("Files")
                        .HasForeignKey("SafetyStudyPlanPlaneId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SubChapter", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("SubChapterCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.Chapter", "IdChapterNavigation")
                        .WithMany("SubChapter")
                        .HasForeignKey("IdChapter")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("SubChapterModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.SubChapterVersion", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("SubChapterVersionCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "AprovedByNavigation")
                        .WithMany("SubChapterVersionIdApproverNavigation")
                        .HasForeignKey("IdApprover");

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.ChapterVersion", "IdChapterVersionNavigation")
                        .WithMany("SubChapterVersion")
                        .HasForeignKey("IdChapterVersion")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "IdReviewerNavigation")
                        .WithMany("SubChapterVersionIdReviewerNavigation")
                        .HasForeignKey("IdReviewer");

                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.SubChapter", "IdSubChapterNavigation")
                        .WithMany("SubChapterVersion")
                        .HasForeignKey("IdSubChapter")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("SubChapterVersionModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.Template", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "CreatedByNavigation")
                        .WithMany("TemplateCreatedByNavigation")
                        .HasForeignKey("CreatedBy")
                        .HasConstraintName("FK_Template_UsersCreate");

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "ModifiedByNavigation")
                        .WithMany("TemplateModifiedByNavigation")
                        .HasForeignKey("ModifiedBy")
                        .HasConstraintName("FK_Template_UsersUpdate")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Segurplan.DataAccessLayer.Database.DataTransferObjects.UserChapterVersion", b =>
                {
                    b.HasOne("Segurplan.DataAccessLayer.Database.DataTransferObjects.ChapterVersion", "ChapterVersion")
                        .WithMany("ProducedBy")
                        .HasForeignKey("ChapterVersionId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Segurplan.DataAccessLayer.Database.Identity.User", "User")
                        .WithMany("ChapterVersionProducedByNavigation")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
