@page "/TasksList"
@model Segurplan.Web.TaskArticleListModel
@using Segurplan.Core.Actions.Administration
@inject SharedLocalizer L
@{
    ViewData["Title"] = L["SideBar.ArticleTask"];
}

<form id="articleTasksList" method="post" enctype="multipart/form-data">
    @Html.AntiForgeryToken()

    <div class="content listado no-tabs">
        <div class="container-fluid p-0">
            <!-- Buscador -->
            <div class="row buscadorRelativoContent ml-2" id="filterZone">
                <div class="row">
                    <div class="col-11">
                        <div class="row">
                            <div class="form-group bmd-form-group col-12">
                                <div class="input-group">
                                    <label for="Name" class="bmd-label-floating">@L["Administration.Task.Name"]</label>
                                    <input type="text" asp-for="@Model.NameFilter" class="form-control" value="@Model.NameFilter">
                                </div>
                            </div>
                        </div>
                        <div class=""></div>
                    </div>
                    <div class="col-1 acciones_buscador">

                        <button class="btn btn-just-icon btn-white">
                            <i class="material-icons cerrarBuscador" id="searchClose" style="display:block">close</i>
                            <div class="ripple-container"></div>
                        </button>

                        <button type="submit" asp-page-handler="DeleteFilter" class="btn btn-white buscar" id="SearchButton">
                            @L["Planes.Filtros.Search"]
                        </button>

                    </div>
                </div>
            </div>
            <div class="row tags">
                <div class="col-12 px-0">
                    <ul>
                        @{
                            if (!string.IsNullOrWhiteSpace(Model.NameFilter))
                            {
                                <li>
                                    @L[$"Administration.Task.Name"]
                                    <span><label asp-for="@Model.NameFilter">@Model.NameFilter</label></span>
                                    <button asp-page-handler="DeleteFilter" asp-route-filterIndex="@TaskArticleListModel.FilterIndex.Name" type="submit" class="btn btn-just-icon btn-white">
                                        <i class="material-icons">close</i>
                                    </button>
                                </li>
                            }
                            
                        }
                    </ul>
                </div>
            </div>
            <!-- TABLA TAREAS-->
            <div class="content planes" id="tableContainer">
                <div class="">
                    @{
                        if (Model.DeleteErrors)
                        {
                            @await Component.InvokeAsync("Warning", Model.WarningDTO);
                        }
                    }
                    <table class="table table-bordered table-striped table-shortable table-hover tableFixHead" id="PlanTable">
                        <thead>
                            <tr>

                                <th title="@L["Administration.Task.Id"]" width="5%">
                                    @{
                                        var idSortClass = !string.IsNullOrWhiteSpace(Model.IdSort)
                                        ? Model.IdSort.Contains("Asc")
                                        ? "order_asc"
                                        : Model.IdSort.Contains("Desc")
                                        ? "order_desc"
                                        : "order_default"
                                        : "order_default";
                                    }
                                    <a asp-page-handler="ApplySort"
                                       asp-route-name="@Model.NameFilter"
                                       asp-route-family="@Model.FamilyFilter"
                                       asp-route-rows="@Model.TableState.PageRows"
                                       asp-route-sortOrder="@Model.IdSort">@L["Administration.Task.Id"]<span class="@idSortClass"></span></a>
                                </th>

                                <th title="@L["Administration.Task.Name"]" width="35%">
                                    @{
                                        var nameSortClass = !string.IsNullOrWhiteSpace(Model.NameSort)
                                        ? Model.NameSort.Contains("Asc")
                                        ? "order_asc"
                                        : Model.NameSort.Contains("Desc")
                                        ? "order_desc"
                                        : "order_default"
                                        : "order_default";
                                    }
                                    <a asp-page-handler="ApplySort"
                                       asp-route-name="@Model.NameFilter"
                                       asp-route-family="@Model.FamilyFilter"
                                       asp-route-rows="@Model.TableState.PageRows"
                                       asp-route-sortOrder="@Model.NameSort">@L["Administration.Task.Name"]<span class="@nameSortClass"></span></a>
                                </th>

                                <th title="acciones" class="text-center" width="7%">@L["Planes.TablePlan.Acciones"] </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (Model.TasksList != null)
                                {
                                    string rowName = string.Empty;
                                    string dupliId = string.Empty;
                                    string dpDown = string.Empty;

                                    foreach (var task in Model.TasksList)
                                    {
                                        rowName = "row" + task.Id;
                                        dpDown = "dp" + task.Id;

                                        <tr id="@rowName">
                                            <td title="@L["General.Table.Visualize"]" onclick="viewTask('@task.Id');">@task.Id</td>
                                            <td title="@L["General.Table.Visualize"]" onclick="viewTask('@task.Id');">@task.Name</td>

                                            <td class="text-center">
                                                <div class="btn-group">
                                                    <a class="nav-link" href="#" id="@dpDown" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <i class="fas fa-ellipsis-v"></i>
                                                        <p class="d-lg-none d-md-block"> Account </p>
                                                    </a>
                                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="navbarDropdownTask">

                                                        <a class="dropdown-item"
                                                           asp-page="./TaskManagement"
                                                           asp-page-handler="ManageTask"
                                                           asp-route-currentOperation="@AdministrationActionType.Read"
                                                           asp-route-taskId="@task.Id">@L["General.Table.Visualize"]</a>

                                                        <a class="dropdown-item"
                                                           asp-page="./TaskManagement"
                                                           asp-page-handler="ManageTask"
                                                           asp-route-currentOperation="@AdministrationActionType.Update"
                                                           asp-route-taskId="@task.Id">@L["Planes.OpcionTable.Editar"]</a>

                                                        <div class="dropdown-divider"></div>

                                                        <a class="dropdown-item" href="#" onclick="deleteTask('@task.Id')">@L["Planes.OpcionTable.Eliminar"]</a>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        </tbody>
                    </table>
                    <button type="submit" class="nuevo btn btn-fab btn-round" asp-page-handler="NewTask"> <i class="fas fa-plus"></i> </button>
                    <div class="footer-table ">
                        <div class="container">
                            <div class="row">
                                <div class="col-2 ml-auto text-left">
                                    <div class="row">
                                        <label class="col-8 col-form-label">@L["Planes.Table.Registros"]</label>
                                        <div class="col-4">
                                            <div class="dropdown bootstrap-select show-tick">
                                                <select asp-for="PageRows" class="selectpicker"
                                                        data-style="select-with-transition" id="rowsChanger"
                                                        data-size="4" tabindex="-98" onchange="$('#SearchButton').trigger('click');">
                                                    @{
                                                        foreach (int rowNum in Model.TableState.PageRowList)
                                                        {
                                                            if (rowNum == Model.TableState.PageRows)
                                                            {
                                                                <option value="@rowNum" selected>@rowNum </option>
                                                            }
                                                            else
                                                            {
                                                                <option value="@rowNum">@rowNum </option>
                                                            }
                                                        }
                                                    }

                                                </select>

                                                <button type="button" class="btn dropdown-toggle" data-toggle="dropdown" role="button" title="Registros">
                                                    <div class="filter-option">
                                                        <div class="filter-option-inner">
                                                            <div class="filter-option-inner-inner">Registros</div>
                                                        </div>
                                                    </div>
                                                    <div class="ripple-container"></div>
                                                </button>

                                                <div class="dropdown-menu " role="combobox">
                                                    <div class="inner show" role="listbox" aria-expanded="false" tabindex="-1">
                                                        <ul class="dropdown-menu inner show">
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="col-4 ">
                                    <div class="row">
                                        <div class="col-4 paginacion text-right">
                                            @{
                                                var startRecord = Model.TableState.PageRows > 0
                                                   ? ((Model.TableState.IndexPage * Model.TableState.PageRows) + 1)
                                                   : 0;

                                                var results = ((Model.TableState.IndexPage * Model.TableState.PageRows) + Model.TableState.PageRows);
                                            }
                                            <span id="startRecord">@startRecord - </span><span id="nResults">@results</span> de <span id="total">@Model.TotalRows</span>
                                        </div>
                                        <div class="col-8 text-right">
                                            @{
                                                var backEnabled = Model.TableState.IndexPage > 0 ? "" : "disabled";
                                                var nextEnabled = Model.TableState.IndexPage < Model.TotalPages ? "" : "disabled";
                                            }
                                            @Html.HiddenFor(m => m.TableState.IndexPage)
                                            @Html.HiddenFor(m => m.TableState.OrderBy)
                                            @Html.HiddenFor(m => m.TableState.OrderModeDesc)
                                            @Html.HiddenFor(m => m.TableState.PageRows)
                                            @Html.HiddenFor(m => m.CurrentOrder)
                                            <button class="btn @backEnabled" type="submit" asp-page-handler="PreviousPage" asp-route-index="@Model.TableState.IndexPage"> <i class="fas fa-chevron-left"></i> </button>
                                            <button class="btn @nextEnabled" type="submit" asp-page-handler="NextPage" asp-route-index="@Model.TableState.IndexPage"> <i class="fas fa-chevron-right"></i> </button>

                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>
<!--MODAL DELETE TASK-->
<div class="modal notificacion fade" id="deleteTask" tabindex="-1" role="dialog" aria-labelledby="delete record" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title error" id="exampleModalLabel">@L["Administration.Task.DeleteTitle"]</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Cerrar"> <span aria-hidden="true">&times;</span> </button>
            </div>
            <div class="modal-body">
                <p class="text-center">@L["Administration.Task.DeleteMsg1"]<span id="deleteTaskMsg" style="color:red;margin-left:5px;margin-right:5px;"></span>@L["Administration.Task.DeleteMsg2"]</p>
                <form id="deleteTask" method="post" action="/TaskManagement?handler=DeleteTask">
                    @Html.AntiForgeryToken()
                    <input type="hidden" id="deleteTaskId" name="deleteTaskId" value="-1" />

                    <div class="row mt-4">
                        <div class="col-6"><button class="btn btn-default btn-lg col-12" data-dismiss="modal">@L["General.Radio.No"]<div class="ripple-container"></div></button></div>
                        <div class="col-6"><button type="submit" id="btnDelete" onclick="this.classList.add('disabled');" class="btn btn-primary btn-lg col-12">@L["General.Radio.Si"]<div class="ripple - container"></div></button></div>
                    </div>

                </form>

            </div>
        </div>
    </div>
    <!-- MODAL DELETE TASK -->


</div>
<script>
    document.getElementById("adminCaret").setAttribute("aria-expanded", "true");
    document.getElementById("pagesAdmin").classList.add("show");
    function deleteTask(taskId) {

        elementSet('deleteTaskId', taskId);
        elementInner('deleteTaskMsg', taskId);
        $('#deleteTask').modal('show').fadeIn("slow");
    }
    function viewTask(id) {
        location.href = "/TaskManagement?handler=ManageTask&currentOperation=Read&TaskId=" + id;
    }
</script>
