@page "/planManagement/{handler?}/{planId}/{isEditEnabled}"
@model Segurplan.Web.Pages.Models.SafetyPlans.PlanManagementModel
@inject SharedLocalizer L
@using Pages.Components.PlanActivityCustomRow
@using Segurplan.Web.Pages.Components.SelectedActivitiesPlanList

@{
    Layout = null;
}

<!-- AVAIABLE -->
<!-- accordion-ordered-list -->
<ul id="avaiableListOfActivities">
    @{
        if (Model.AvailableActivities.Count > 0)
        {
            for (int cIndex = 0; cIndex < Model.AvailableActivities.Count; cIndex++)
            {
                var chapters = Model.AvailableActivities[cIndex];
                if (!chapters.IsSelected)
                {
                    <li class="accordion-firstlevel" id="av_parent_chapter_@chapters.Id">
                        <div class="accordion-container">
                            <div class="activities-actions align-left">
                                <div class="form-check">
                                    <label>
                                        <input onclick="setAllCheckboxes('av_chapter_@chapters.Id', this)" class="form-check-input" type="checkbox" value="">
                                        <span class="form-check-sign"><span class="check"></span></span>
                                    </label>
                                </div>
                            </div>
                            @{
                                if (chapters.SubChapter.Count > 0)
                                {
                                    <a data-toggle="collapse" href="#av_chapter_@chapters.Id" aria-expanded="false" aria-controls="av_chapter_@chapters.Id" class="accordion-toggle">
                                        @Html.HiddenFor(model => model.AvailableActivities[cIndex].Id)
                                        @chapters.Number @chapters.Title <small hidden>@chapters.Id</small>
                                    </a>
                                }
                                else
                                {
                                    <span class="accordion-toggle">
                                        @Html.HiddenFor(model => model.AvailableActivities[cIndex].Id)
                                        @chapters.Number @chapters.Title <small hidden>@chapters.Id</small>
                                    </span>
                                }
                            }
                        </div>

                        @if (chapters.SubChapter.Count > 0)
                        {
                            <ul id="av_chapter_@chapters.Id" data-parent="#av_parent_chapter_@chapters.Id" class="collapse">

                                @for (int sIndex = 0; sIndex < chapters.SubChapter.Count; sIndex++)
                                {
                                    var subChapter = chapters.SubChapter[sIndex];
                                    if (!subChapter.IsSelected)
                                    {
                                        <!-- 2level accordion -->
                                        <li class="accordion-secondlevel" id="av_parent_subChapter_@subChapter.Id">
                                            <div class="accordion-container">
                                                <div class="activities-actions align-left">
                                                    <div class="form-check">
                                                        <label>
                                                            <input onclick="setAllCheckboxes('av_subChap_@subChapter.Id', this)" class="form-check-input" type="checkbox" value="">
                                                            <span class="form-check-sign"><span class="check"></span></span>
                                                        </label>
                                                    </div>
                                                </div>
                                                @{
                                                    if (subChapter.Activities.Count > 0)
                                                    {
                                                        <a data-toggle="collapse" href="#av_subChap_@subChapter.Id" aria-expanded="false" aria-controls="av_subChap_@subChapter.Id" class="accordion-toggle">
                                                            @Html.HiddenFor(model => model.AvailableActivities[cIndex].SubChapter[sIndex].Id)
                                                            @chapters.Number.@subChapter.Number @subChapter.Title <small hidden>@chapters.Id @subChapter.Id</small>
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        @Html.HiddenFor(model => model.AvailableActivities[cIndex].SubChapter[sIndex].Id)
                                                        <span class="accordion-toggle">@chapters.Number.@subChapter.Number @subChapter.Title <small hidden>@chapters.Id @subChapter.Id</small></span>
                                                    }
                                                }
                                            </div>
                                            @{
                                                if (subChapter.Activities.Count > 0)
                                                {
                                                    <ul id="av_subChap_@subChapter.Id" data-parent="#av_parent_subChapter_@subChapter.Id" class="collapse">
                                                        @for (int aIndex = 0; aIndex < subChapter.Activities.Count; aIndex++)
                                                        {
                                                            var activities = subChapter.Activities[aIndex];
                                                            if (!activities.IsSelected)
                                                            {
                                                                <li class="accordion-secondlevel">
                                                                    <div class="accordion-container">
                                                                        <div class="activities-actions align-left">
                                                                            <div class="form-check">
                                                                                <label>
                                                                                    <input class="form-check-input" type="checkbox" name="activityLeft" value="@activities.Id">
                                                                                    <span class="form-check-sign"><span class="check"></span></span>
                                                                                </label>
                                                                            </div>
                                                                        </div>
                                                                        <span class="accordion-toggle">
                                                                            @Html.HiddenFor(model => model.AvailableActivities[cIndex].SubChapter[sIndex].Activities[aIndex].Id)
                                                                            @chapters.Number.@subChapter.Number.@activities.Number @activities.Description <small hidden>(@chapters.Id @subChapter.Id @activities.Id)</small>
                                                                        </span>
                                                                    </div>
                                                                </li>
                                                            }
                                                        }
                                                    </ul>
                                                }
                                            }
                                        </li>
                                    }

                                }
                            </ul>
                        }

                    </li>
                }
            }
        }
    }
</ul>

@*Selected List on component*@
<ul id="selectedListOfActivities">
    @await Component.InvokeAsync(typeof(Pages.Components.SelectedActivitiesPlanList.SelectedActivitiesPlanListViewComponent), new SelectedActivitiesPlanListsModel { SelectedChapters = Model.SelectedActivities, IsEditEnabled = Model.IsActivitiesEditEnabled })
</ul>


    <!-- SELECTED -->
    <!-- accordion-ordered-list -->
    @*<ul id="selectedListOfActivities">
            @{
                //int selectedChaptersCount = Model.SelectedActivities.Count + Model.CustomSelectedChapters.Count;

                if (Model.SelectedActivities.Any())
                {

                    int cIndex = 0;

                    foreach (var chapter in Model.SelectedActivities)
                    {
                        //var chapter = Model.SelectedActivities.Where(x => x.Position == cIndex + 1).FirstOrDefault();

                        if (chapter.IsCustomChapter)
                        {
                            @await Component.InvokeAsync(typeof(Pages.Components.PlanActivityCustomRow.PlanActivityCustomRowViewComponent), new PlanActivityCustomRowModel { CustomChapter = chapter, RowIndex = cIndex });

                            cIndex++;

                            continue;
                        }

                        <li class="accordion-firstlevel" id="sel_parent_chapter_@chapter.Id" onclick="changeSummernoteTarget(this,event)" hidden="@(chapter.Id==1)" style="display: block;">
                            <input id="chap_Descrp_@chapter.Id" type="hidden" name="SelectedActivities[@cIndex].WordDescription" value="@chapter.WordDescription" />
                            <div id="chap_@chapter.Id" class="accordion-container">
                                <div class="activities-actions align-left">
                                    <div class="form-check">
                                        <label>
                                            <input onclick="setAllCheckboxes('sel_chapter_@chapter.Id', this)" class="form-check-input" type="checkbox" value="">
                                            <span class="form-check-sign"><span class="check"></span></span>
                                        </label>
                                    </div>
                                </div>
                                @{
                                    if (chapter.SubChapter.Count > 0)
                                    {
                                        <a id="anchor_chapter_@chapter.Id" data-toggle="collapse" href="#sel_chapter_@chapter.Id" aria-expanded="false" aria-controls="sel_chapter_@chapter.Id" class="accordion-toggle">
                                            @Html.HiddenFor(model => model.SelectedActivities[cIndex].Id)
                                            @Html.HiddenFor(model => model.SelectedActivities[cIndex].Position)
                                            <input name="SelectedActivities[@cIndex].Position" type="hidden" id="Position_element_@chapter.Id" value="@chapter.Position" />
                                            <input name="SelectedActivities[@cIndex].Id" type="hidden" id="ChapterId_element_@chapter.Id" value="@chapter.Id" />

                                            <label id="lbl_chapter_@chapter.Id">
                                                @(cIndex + 1) @chapter.Position @chapter.Title (<small>@chapter.Id</small>)
                                            </label>
                                        </a>
                                    }
                                    else
                                    {
                                        <span class="accordion-toggle">
                                            <input name="SelectedActivities[@cIndex].Position" type="hidden" id="Position_element_@chapter.Id" value="@chapter.Position" />
                                            <input name="SelectedActivities[@cIndex].Id" type="hidden" id="ChapterId_element_@chapter.Id" value="@chapter.Id" />
                                            <label id="lbl_chapter_@chapter.Id">
                                                @(cIndex + 1) @chapter.Position @chapter.Title (<small>@chapter.Id</small>)
                                            </label>
                                        </span>
                                    }

                                }

                                <div class="activities-actions align-right mr-2">
                                    <button class="dropdown-toggle btn btn-just-icon btn-link btn-round btn-sm pl-2" type="button" id="dropdownMenuButton3" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="fas fa-ellipsis-v"></span> </button>
                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton3" x-placement="bottom-start">
                                        <a class="dropdown-item" onclick="CreateCustomSubchapter('@nameof(ActivityModalDestinationEnum.SubchaptersModal)','Position_element_@chapter.Id')">Añadir nuevo Subcapítulo</a>
                                    </div>
                                    <i class="fas fa-arrow-circle-up fa-2x ml-3"
                                       onclick="moveChapter(@chapter.Id,
                                                        'SelectedActivities_' + @cIndex +'__Position',
                                                        -1)"></i>
                                    <i class="fas fa-arrow-circle-down fa-2x ml-3"
                                       onclick="moveChapter(@chapter.Id,
                                                         'SelectedActivities_' + @cIndex +'__Position',
                                                         1)"></i>

                                </div>
                            </div>

                            @if (chapter.SubChapter.Count > 0)
                            {
                                <ul id="sel_chapter_@chapter.Id" data-parent="#sel_parent_chapter_@chapter.Id" class="collapse">
                                    @for (int sIndex = 0; sIndex < chapter.SubChapter.Count; sIndex++)
                                    {
                                        var subChapter = chapter.SubChapter[sIndex];

                                         2level accordion
                                        <li class="accordion-secondlevel" id="sel_parent_subChapter_@subChapter.Id" onclick="changeSummernoteTarget(this,event)">
                                            <input type="hidden" name="SelectedActivities[@cIndex].SubChapter[@sIndex].WordDescription" value="@chapter.SubChapter[sIndex].WordDescription" />
                                            <div class="accordion-container">
                                                <div class="activities-actions align-left">
                                                    <div class="form-check">
                                                        <label>
                                                            <input onclick="setAllCheckboxes('sel_subChap_@subChapter.Id', this)" class="form-check-input" type="checkbox" value="">
                                                            <span class="form-check-sign"><span class="check"></span></span>
                                                        </label>
                                                    </div>
                                                </div>
                                                @{
                                                    if (subChapter.Activities.Count > 0)
                                                    {
                                                        <a data-toggle="collapse" href="#sel_subChap_@subChapter.Id" aria-expanded="false" aria-controls="sel_subChap_@subChapter.Id" class="accordion-toggle">
                                                            <input type="hidden" name="SelectedActivities[@cIndex].SubChapter[@sIndex].Id" value="@chapter.SubChapter[sIndex].Id" />
                                                            <input type="hidden" name="SelectedActivities[@cIndex].SubChapter[@sIndex].Position" value="@chapter.SubChapter[sIndex].Position" />
                                                            @Html.HiddenFor(model => model.SelectedActivities[cIndex].SubChapter[sIndex].Id)
                                                                @Html.HiddenFor(model => model.SelectedActivities[cIndex].SubChapter[sIndex].Position)
                                                            .@(sIndex + 1) @subChapter.Title (<small>@chapter.Id @subChapter.Id</small>)
                                                        </a>
                                                    }
                                                    else
                                                    {
                                                        <span class="accordion-toggle">
                                                            <input type="hidden" name="SelectedActivities[@cIndex].SubChapter[@sIndex].Id" value="@chapter.SubChapter[sIndex].Id" />
                                                            <input type="hidden" name="SelectedActivities[@cIndex].SubChapter[@sIndex].Position" value="@chapter.SubChapter[sIndex].Position" />
                                                            @Html.HiddenFor(model => model.SelectedActivities[cIndex].SubChapter[sIndex].Id)
                                                                @Html.HiddenFor(model => model.SelectedActivities[cIndex].SubChapter[sIndex].Position)
                                                            .@(sIndex + 1) @subChapter.Title (<small>@chapter.Id @subChapter.Id</small>)
                                                        </span>
                                                    }
                                                }
                                                <div class="activities-actions align-right mr-2">
                                                    <button class="dropdown-toggle btn btn-just-icon btn-link btn-round btn-sm pl-2" type="button" id="dropdownMenuButton3" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"> <span class="fas fa-ellipsis-v"></span> </button>
                                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton3" x-placement="bottom-start">
                                                        <a class="dropdown-item" onclick="CreateCustomActivity('@nameof(ActivityModalDestinationEnum.ActivitiesModal)','Position_element_@chapter.Id','SelectedActivities[@cIndex].SubChapter[@sIndex].Position')">Añadir nueva Actividad</a>
                                                    </div>
                                                    <i class="fas fa-arrow-circle-up fa-2x ml-3"
                                                       onclick="moveItem('sel_parent_subChapter_@subChapter.Id',
                                                                         'SelectedActivities_' + @cIndex + '__SubChapter_' + @sIndex +'__Position',
                                                                         -1)"></i>
                                                    <i class="fas fa-arrow-circle-down fa-2x ml-3"
                                                       onclick="moveItem('sel_parent_subChapter_@subChapter.Id',
                                                                         'SelectedActivities_' + @cIndex + '__SubChapter_' + @sIndex +'__Position',
                                                                         1)"></i>
                                                </div>
                                            </div>
                                            @{
                                                if (subChapter.Activities.Count > 0)
                                                {
                                                    <ul id="sel_subChap_@subChapter.Id" data-parent="sel_parent_subChapter_@subChapter.Id" class="collapse">

                                                        @for (int aIndex = 0; aIndex < subChapter.Activities.Count; aIndex++)
                                                        {
                                                            var activities = subChapter.Activities[aIndex];

                                                            <li id="act_@activities.Id" class="accordion-secondlevel" onclick="changeSummernoteTarget(this,event)">
                                                                <input type="hidden" name="SelectedActivities[@cIndex].SubChapter[@sIndex].Activities[@aIndex].WordDescription" value="@chapter.SubChapter[sIndex].Activities[aIndex].WordDescription" />
                                                                <input type="hidden" name="SelectedActivities[@cIndex].SubChapter[@sIndex].Activities[@aIndex].Position" value="@chapter.SubChapter[sIndex].Activities[aIndex].Position" />

                                                                <input type="hidden" asp-for="SelectedActivities[cIndex].SubChapter[sIndex].Activities[aIndex].WordDescription" />
                                                                    @Html.HiddenFor(model => model.SelectedActivities[cIndex].SubChapter[sIndex].Activities[aIndex].Position)
                                                                <div class="accordion-container">
                                                                    <div class="activities-actions align-left">
                                                                        <div class="form-check">
                                                                            <label>
                                                                                <input class="form-check-input" type="checkbox" name="activityRight" value="@activities.Id">
                                                                                <span class="form-check-sign"><span class="check"></span></span>
                                                                            </label>
                                                                        </div>
                                                                    </div>
                                                                    <span class="accordion-toggle">
                                                                        @Html.HiddenFor(model => model.SelectedActivities[cIndex].SubChapter[sIndex].Activities[aIndex].Id)
                                                                        <input type="hidden" name="SelectedActivities[@cIndex].SubChapter[@sIndex].Activities[@aIndex].Id" value="@chapter.SubChapter[sIndex].Activities[aIndex].Id" />

                                                                        ..@(aIndex + 1) @activities.Description<small>(@chapter.Id @subChapter.Id @activities.Id)</small>
                                                                    </span>
                                                                    <div class="activities-actions align-right mr-2">
                                                                        <i class="fas fa-arrow-circle-up fa-2x ml-3"
                                                                           onclick="moveItem('act_@activities.Id',
                                                                                             'SelectedActivities_' + @cIndex + '__SubChapter_' + @sIndex + '__Activities_' + @aIndex + '__Position',
                                                                                             -1)"></i>
                                                                        <i class="fas fa-arrow-circle-down fa-2x ml-3"
                                                                           onclick="moveItem('act_@activities.Id',
                                                                                             'SelectedActivities_' + @cIndex + '__SubChapter_' + @sIndex + '__Activities_' + @aIndex + '__Position',
                                                                                             1)"></i>
                                                                    </div>
                                                                </div>
                                                            </li>
                                                        }
                                                    </ul>
                                                }
                                            }
                                        </li>
                                    }
                                </ul>
                            }

                        </li>
                        cIndex += 1;

                    }
                }
            }
        </ul>*@
